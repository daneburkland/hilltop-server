### This file was generated by Nexus Schema
### Do not make changes to this file directly


type ApiKey {
  hashed: String!
  prefix: String!
  userId: String!
}

scalar DateTime

type GeneratedApiKey {
  key: String!
  prefix: String!
}

type Log {
  hostname: String!
  id: Int!
  level: Int!
  msg: String!
  pid: Int!
  stack: String
  testRun: TestRun!
  time: DateTime!
}

input LogWhereUniqueInput {
  id: Int
}

type Mutation {
  createTest(code: String!, title: String!): Test!
  generateApiKey: GeneratedApiKey!
  login(email: String!, name: String!): User!
  updateTest(code: String!, id: Int!, run: Boolean, title: String!): Test!
}

type Query {
  myTests(orderBy: TestOrderByInput): [Test!]!
  test(id: Int): Test!
  testRun(id: Int): TestRun!
}

type Test {
  author: User
  code: String!
  createdAt: DateTime!
  id: Int!
  runs(after: TestRunWhereUniqueInput, before: TestRunWhereUniqueInput, first: Int, last: Int): [TestRun!]!
  title: String!
  updatedAt: DateTime!
}

input TestOrderByInput {
  updatedAt: String
}

type TestRun {
  createdAt: DateTime!
  id: Int!
  logs(after: LogWhereUniqueInput, before: LogWhereUniqueInput, first: Int, last: Int): [Log!]!
  result: String!
  screenshotUrls: [String!]!
  test: Test!
}

input TestRunWhereUniqueInput {
  id: Int
}

type User {
  email: String!
  id: String!
  name: String
}
