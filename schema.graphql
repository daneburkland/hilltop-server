### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type Mutation {
  createTest(code: String!, title: String!): Test!
  login(email: String!, name: String!): User!
  updateTest(code: String!, id: Int!, run: Boolean, title: String!): Test!
}

type Query {
  myTests: [Test!]!
  test(id: Int): Test!
  testRun(id: Int): TestRun!
}

type Test {
  author: User
  code: String!
  createdAt: DateTime!
  id: Int!
  runs(after: TestRunWhereUniqueInput, before: TestRunWhereUniqueInput, first: Int, last: Int): [TestRun!]!
  title: String!
  updatedAt: DateTime!
}

type TestRun {
  createdAt: DateTime!
  id: Int!
  logs: [String!]!
  result: String!
  test: Test!
}

input TestRunWhereUniqueInput {
  id: Int
}

type User {
  email: String!
  id: String!
  name: String
}
