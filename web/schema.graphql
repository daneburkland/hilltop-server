### This file was generated by Nexus Schema
### Do not make changes to this file directly


type ApiKey {
  hashed: String!
  prefix: String!
  userId: String!
}

scalar DateTime

type Flow {
  author: User!
  code: String!
  createdAt: DateTime!
  id: Int!
  runs(after: FlowRunWhereUniqueInput, before: FlowRunWhereUniqueInput, first: Int, last: Int): [FlowRun!]!
  title: String!
  updatedAt: DateTime!
}

input FlowOrderByInput {
  updatedAt: String
}

type FlowRun {
  createdAt: DateTime!
  flow: Flow!
  id: Int!
  logs(after: LogWhereUniqueInput, before: LogWhereUniqueInput, first: Int, last: Int): [Log!]!
  result: String!
  screenshotUrls: [String!]!
}

input FlowRunOrderByInput {
  createdAt: String
}

input FlowRunWhereUniqueInput {
  id: Int
}

type GeneratedApiKey {
  key: String!
  prefix: String!
}

type Log {
  id: Int!
  level: String!
  msg: String!
  run: FlowRun!
  stack: String
}

input LogWhereUniqueInput {
  id: Int
}

type Mutation {
  createFlow(code: String!, title: String!): Flow!
  createWebhook(onCreate: Boolean!, onExecute: Boolean!, resource: String!, url: String!): Webhook!
  generateApiKey: GeneratedApiKey!
  inviteTeammate(email: String!): User!
  login(email: String!, name: String!): User!
  updateFlow(code: String!, id: Int!, run: Boolean, title: String!): Flow!
}

type Query {
  flow(id: Int): Flow!
  flowRun(id: Int): FlowRun!
  flowRuns(id: Int, orderBy: FlowRunOrderByInput): [FlowRun!]!
  myFlows(orderBy: FlowOrderByInput): [Flow!]!
  user: User!
}

type Team {
  id: Int!
  members(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  name: String!
}

type User {
  email: String!
  id: String!
  name: String!
  team: Team!
}

input UserWhereUniqueInput {
  email: String
  id: String
}

type Webhook {
  id: Int!
  onCreate: Boolean!
  onExecute: Boolean!
  resource: String!
  url: String!
}
