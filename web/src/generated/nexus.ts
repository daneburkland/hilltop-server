/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    model: NexusPrisma<TypeName, 'model'>
    crud: any
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  FlowOrderByInput: { // input type
    updatedAt?: string | null; // String
  }
  FlowRunOrderByInput: { // input type
    createdAt?: string | null; // String
  }
  FlowRunWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  LogWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  RepeatOptionsInput: { // input type
    cron?: string | null; // String
    every?: string | null; // String
    flow?: string | null; // String
    limit?: string | null; // String
    tz?: string | null; // String
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // String
  }
  WebhookWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
  Noun: "Flow"
  Verb: "errored" | "executed"
}

export interface NexusGenRootTypes {
  ApiKey: { // root type
    hashed: string; // String!
    prefix: string; // String!
    userId: string; // String!
  }
  Event: { // root type
    noun: NexusGenEnums['Noun']; // Noun!
    verb: NexusGenEnums['Verb']; // Verb!
  }
  Flow: { // root type
    code: string; // String!
    createdAt: any; // DateTime!
    id: number; // Int!
    title: string; // String!
    updatedAt: any; // DateTime!
  }
  FlowRun: { // root type
    createdAt: any; // DateTime!
    id: number; // Int!
    result: string; // String!
    screenshotUrls: string[]; // [String!]!
  }
  GeneratedApiKey: { // root type
    key: string; // String!
    prefix: string; // String!
  }
  Log: { // root type
    id: number; // Int!
    level: string; // String!
    msg: string; // String!
    stack?: string | null; // String
  }
  Mutation: {};
  Query: {};
  RepeatOptions: { // root type
    cron?: string | null; // String
    every?: number | null; // Int
    id: number; // Int!
    jobId: number; // Int!
    limit?: number | null; // Int
    tz?: string | null; // String
  }
  Team: { // root type
    id: number; // Int!
    name: string; // String!
  }
  User: { // root type
    email: string; // String!
    id: string; // String!
    name: string; // String!
  }
  Webhook: { // root type
    id: number; // Int!
    url: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  FlowOrderByInput: NexusGenInputs['FlowOrderByInput'];
  FlowRunOrderByInput: NexusGenInputs['FlowRunOrderByInput'];
  FlowRunWhereUniqueInput: NexusGenInputs['FlowRunWhereUniqueInput'];
  LogWhereUniqueInput: NexusGenInputs['LogWhereUniqueInput'];
  RepeatOptionsInput: NexusGenInputs['RepeatOptionsInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  WebhookWhereUniqueInput: NexusGenInputs['WebhookWhereUniqueInput'];
  Noun: NexusGenEnums['Noun'];
  Verb: NexusGenEnums['Verb'];
}

export interface NexusGenFieldTypes {
  ApiKey: { // field return type
    hashed: string; // String!
    prefix: string; // String!
    userId: string; // String!
  }
  Event: { // field return type
    noun: NexusGenEnums['Noun']; // Noun!
    verb: NexusGenEnums['Verb']; // Verb!
    webhooks: NexusGenRootTypes['Webhook'][]; // [Webhook!]!
  }
  Flow: { // field return type
    author: NexusGenRootTypes['User']; // User!
    code: string; // String!
    createdAt: any; // DateTime!
    id: number; // Int!
    runs: NexusGenRootTypes['FlowRun'][]; // [FlowRun!]!
    title: string; // String!
    updatedAt: any; // DateTime!
  }
  FlowRun: { // field return type
    createdAt: any; // DateTime!
    flow: NexusGenRootTypes['Flow']; // Flow!
    id: number; // Int!
    logs: NexusGenRootTypes['Log'][]; // [Log!]!
    result: string; // String!
    screenshotUrls: string[]; // [String!]!
  }
  GeneratedApiKey: { // field return type
    key: string; // String!
    prefix: string; // String!
  }
  Log: { // field return type
    id: number; // Int!
    level: string; // String!
    msg: string; // String!
    run: NexusGenRootTypes['FlowRun']; // FlowRun!
    stack: string | null; // String
  }
  Mutation: { // field return type
    createFlow: NexusGenRootTypes['Flow']; // Flow!
    createWebhook: NexusGenRootTypes['Webhook']; // Webhook!
    deleteWebhook: NexusGenRootTypes['Webhook']; // Webhook!
    generateApiKey: NexusGenRootTypes['GeneratedApiKey']; // GeneratedApiKey!
    inviteTeammate: NexusGenRootTypes['User']; // User!
    login: NexusGenRootTypes['User']; // User!
    updateFlow: NexusGenRootTypes['Flow']; // Flow!
  }
  Query: { // field return type
    flow: NexusGenRootTypes['Flow']; // Flow!
    flowRun: NexusGenRootTypes['FlowRun']; // FlowRun!
    flowRuns: NexusGenRootTypes['FlowRun'][]; // [FlowRun!]!
    myFlows: NexusGenRootTypes['Flow'][]; // [Flow!]!
    user: NexusGenRootTypes['User']; // User!
    webhooks: NexusGenRootTypes['Webhook'][]; // [Webhook!]!
  }
  RepeatOptions: { // field return type
    cron: string | null; // String
    every: number | null; // Int
    flow: NexusGenRootTypes['Flow']; // Flow!
    id: number; // Int!
    jobId: number; // Int!
    limit: number | null; // Int
    tz: string | null; // String
  }
  Team: { // field return type
    id: number; // Int!
    members: NexusGenRootTypes['User'][]; // [User!]!
    name: string; // String!
  }
  User: { // field return type
    email: string; // String!
    id: string; // String!
    name: string; // String!
    team: NexusGenRootTypes['Team']; // Team!
  }
  Webhook: { // field return type
    event: NexusGenRootTypes['Event']; // Event!
    id: number; // Int!
    owner: NexusGenRootTypes['User']; // User!
    url: string; // String!
  }
}

export interface NexusGenArgTypes {
  Event: {
    webhooks: { // args
      after?: NexusGenInputs['WebhookWhereUniqueInput'] | null; // WebhookWhereUniqueInput
      before?: NexusGenInputs['WebhookWhereUniqueInput'] | null; // WebhookWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Flow: {
    runs: { // args
      after?: NexusGenInputs['FlowRunWhereUniqueInput'] | null; // FlowRunWhereUniqueInput
      before?: NexusGenInputs['FlowRunWhereUniqueInput'] | null; // FlowRunWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  FlowRun: {
    logs: { // args
      after?: NexusGenInputs['LogWhereUniqueInput'] | null; // LogWhereUniqueInput
      before?: NexusGenInputs['LogWhereUniqueInput'] | null; // LogWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Mutation: {
    createFlow: { // args
      code: string; // String!
      title: string; // String!
    }
    createWebhook: { // args
      noun: string; // String!
      url: string; // String!
      verb: string; // String!
    }
    deleteWebhook: { // args
      id: number; // Int!
    }
    inviteTeammate: { // args
      email: string; // String!
    }
    login: { // args
      email: string; // String!
      name: string; // String!
    }
    updateFlow: { // args
      code: string; // String!
      id: number; // Int!
      repeatOptions?: NexusGenInputs['RepeatOptionsInput'] | null; // RepeatOptionsInput
      run?: boolean | null; // Boolean
      title: string; // String!
    }
  }
  Query: {
    flow: { // args
      id?: number | null; // Int
    }
    flowRun: { // args
      id?: number | null; // Int
    }
    flowRuns: { // args
      id?: number | null; // Int
      orderBy?: NexusGenInputs['FlowRunOrderByInput'] | null; // FlowRunOrderByInput
    }
    myFlows: { // args
      orderBy?: NexusGenInputs['FlowOrderByInput'] | null; // FlowOrderByInput
    }
  }
  Team: {
    members: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "ApiKey" | "Event" | "Flow" | "FlowRun" | "GeneratedApiKey" | "Log" | "Mutation" | "Query" | "RepeatOptions" | "Team" | "User" | "Webhook";

export type NexusGenInputNames = "FlowOrderByInput" | "FlowRunOrderByInput" | "FlowRunWhereUniqueInput" | "LogWhereUniqueInput" | "RepeatOptionsInput" | "UserWhereUniqueInput" | "WebhookWhereUniqueInput";

export type NexusGenEnumNames = "Noun" | "Verb";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}